[{"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Scene.js":"1","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\App.js":"2","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\State\\context.js":"3","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Rubiks.js":"4","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\TopBar.js":"5","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Face.js":"6","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\reportWebVitals.js":"7","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\FaceZero.js":"8","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\FaceOne.js":"9","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\FaceTwo.js":"10","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Cube.js":"11","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\ColorMaterial.js":"12","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\index.js":"13","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Effects.js":"14","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Util\\Rotations.js":"15","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\App.js":"16","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\Rubiks.js":"17","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\ColorMaterial.js":"18","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\Scene.js":"19","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\State\\context.js":"20","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Util\\Rotations.js":"21","C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\Cube.js":"22","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\ControlDisplay.js":"23","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Environment.js":"24","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Title.js":"25","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Cubemap.js":"26","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Help.js":"27","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Hooks\\useGestures.js":"28","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Hooks\\useWindowSize.js":"29"},{"size":3423,"mtime":1632984328289,"results":"30","hashOfConfig":"31"},{"size":5472,"mtime":1632984324513,"results":"32","hashOfConfig":"31"},{"size":5795,"mtime":1632983831301,"results":"33","hashOfConfig":"31"},{"size":4150,"mtime":1632984138565,"results":"34","hashOfConfig":"31"},{"size":1121,"mtime":1630881826262,"results":"35","hashOfConfig":"31"},{"size":418,"mtime":1612336816333,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1611629125939,"results":"38","hashOfConfig":"31"},{"size":574,"mtime":1612500135755,"results":"39","hashOfConfig":"37"},{"size":576,"mtime":1612644836226,"results":"40","hashOfConfig":"37"},{"size":577,"mtime":1612500127501,"results":"41","hashOfConfig":"37"},{"size":1858,"mtime":1632637580109,"results":"42","hashOfConfig":"31"},{"size":712,"mtime":1612051596853,"results":"43","hashOfConfig":"37"},{"size":500,"mtime":1611629125939,"results":"44","hashOfConfig":"31"},{"size":1562,"mtime":1612063328330,"results":"45","hashOfConfig":"37"},{"size":5618,"mtime":1630823115198,"results":"46","hashOfConfig":"31"},{"size":1688,"mtime":1613547731608,"results":"47","hashOfConfig":"48"},{"size":3543,"mtime":1613547644210,"results":"49","hashOfConfig":"48"},{"size":712,"mtime":1612051596853,"results":"50","hashOfConfig":"48"},{"size":3203,"mtime":1613544973673,"results":"51","hashOfConfig":"48"},{"size":3963,"mtime":1613544472387,"results":"52","hashOfConfig":"48"},{"size":8454,"mtime":1613548263214,"results":"53","hashOfConfig":"48"},{"size":2409,"mtime":1613544106152,"results":"54","hashOfConfig":"48"},{"size":1077,"mtime":1632981682460,"results":"55","hashOfConfig":"31"},{"size":809,"mtime":1632637853931,"results":"56","hashOfConfig":"31"},{"size":1106,"mtime":1632630031942,"results":"57","hashOfConfig":"31"},{"size":352,"mtime":1630879644948,"results":"58","hashOfConfig":"59"},{"size":962,"mtime":1630879542402,"results":"60","hashOfConfig":"31"},{"size":8196,"mtime":1632636259883,"results":"61","hashOfConfig":"31"},{"size":866,"mtime":1632629039591,"results":"62","hashOfConfig":"31"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kzzh0d",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"u12yq",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8zvi1z",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xe856p",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Scene.js",["127","128","129","130"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\App.js",["131","132"],"import './App.css';\nimport React, { useReducer, useMemo, useEffect, useState, useRef } from 'react'\nimport { AppStateContext, AppDispatchContext, DefaultState, reducer } from './State/context'\nimport Scene from './Components/Scene'\nimport Title from './Components/Title'\nimport Cubemap from './Components/Cubemap'\nimport Help from './Components/Help'\nimport useGestures from './Hooks/useGestures';\nimport useWindowSize from './Hooks/useWindowSize';\nimport Rubiks from './Components/Rubiks'\n\nfunction App() {\n\n\t// App state setup\n\tconst [state, dispatch] = useReducer(reducer, DefaultState);\n\tconst context = useMemo(() => {\n\t\treturn {state, dispatch}\n\t}, [state, dispatch])\n\n\tconst padRef = useRef(null);\n\tconst Gestures = useGestures(padRef);\n\tconst { windowWidth } = useWindowSize();\n\n\tconst [showHelp, setShowHelp] = useState(false);\n\n\t// global key listeners - on key press\n\tconst turnKeyOn = (e) => {\n\n\t\t// setup keys for undo function\n\t\tif (e.key === 'Backspace'){\n\t\t\tdispatch({ type: 'undo' });\n\t\t}\n\n\t\t// arrow keys for rotating the cube\n\t\tif (e.key.includes('Arrow')){\n\t\t\tdispatch({ type: e.key, payload: true });\n\t\t}\n\n\t\t// https://ruwix.com/the-rubiks-cube/notation/\n\t\tconst letterKeys = [\n\t\t\t'u', 'l', 'f', 'r', 'b', 'd', // clockwise\n\t\t\t'U', 'L', 'F', 'R', 'B', 'D', // counter clockwise\n\t\t\t'm', 'M', 'e', 'E', 's', 'S', // slice turns\n\t\t];\n\n\t\t// hook in dispatch to letters\n\t\tif (letterKeys.includes(e.key)){\n\t\t\tif (!state.moving){\n\t\t\t\tdispatch({ type: 'letterKey', payload: e.key });\n\t\t\t}\n\t\t}\n\n\t\t// include support for changing skybox view number keys\n\t\tconst numbers = '0123456789'.split('');\n\t\tif (numbers.includes(e.key)){\n\t\t\tdispatch({ type: 'changeSkybox', payload: e.key });\n\t\t}\n\t}\n\n\t// global key listeners - on key release\n\tconst turnKeyOff = (e) => {\n\t\tdispatch({ type: e.key, payload: false});\n\t\tif (e.key === 'h' || e.key === 'H'){\n\t\t\tsetShowHelp(!showHelp);\n\t\t}\n\t}\n\n\t// attach listeners\n\tuseEffect(() => {\n\t\tif (windowWidth > 800){\n\t\t\twindow.addEventListener('keyup', turnKeyOff);\n\t\t\twindow.addEventListener('keydown', turnKeyOn);\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('keyup', turnKeyOff);\n\t\t\t\twindow.removeEventListener('keydown', turnKeyOn);\n\t\t\t}\n\t\t}\n\t}, [windowWidth])\n\n\t\n\tuseEffect(() => {\n\t\tif (windowWidth <= 800){\n\n\t\t\tconst give_alerts = false;\n\t\t\tconst alertt = (msg) => (give_alerts) ? alert(msg):null;\n\t\t\tGestures.subscribe('top-right', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'u' });\n\t\t\t\t\talertt('top-right');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('top-left', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'U' });\n\t\t\t\t\talertt('top-left');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('bottom-left', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'D' });\n\t\t\t\t\talertt('bottom-left');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('bottom-right', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'd' });\n\t\t\t\t\talertt('bottom-right');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('left-up', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'L' });\n\t\t\t\t\talertt('left-up');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('left-down', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'l' });\n\t\t\t\t\talertt('left-down');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('right-up', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'r' });\n\t\t\t\t\talertt('right-up');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('right-down', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'R' });\n\t\t\t\t\talertt('right-down');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('tap-top-left', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'F' });\n\t\t\t\t\talertt('tap-top-left');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('tap-top-right', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'f' });\n\t\t\t\t\talertt('tap-top-right');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('tap-bottom-right', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'B' });\n\t\t\t\t\talertt('tap-bottom-right');\n\t\t\t\t}\n\t\t\t});\n\t\t\tGestures.subscribe('tap-bottom-left', () => {\n\t\t\t\tif (!state.moving){\n\t\t\t\t\tdispatch({ type: 'letterKey', payload: 'b' });\n\t\t\t\t\talertt('tap-bottom-left');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tGestures.unsubscribe('top-right');\n\t\t\t\tGestures.unsubscribe('top-left');\n\t\t\t\tGestures.unsubscribe('bottom-left');\n\t\t\t\tGestures.unsubscribe('bottom-right');\n\t\t\t\tGestures.unsubscribe('left-up');\n\t\t\t\tGestures.unsubscribe('left-down');\n\t\t\t\tGestures.unsubscribe('right-up');\n\t\t\t\tGestures.unsubscribe('right-down');\n\t\t\t\tGestures.unsubscribe('tap-top-left');\n\t\t\t\tGestures.unsubscribe('tap-top-right');\n\t\t\t\tGestures.unsubscribe('tap-bottom-right');\n\t\t\t\tGestures.unsubscribe('tap-bottom-left');\n\t\t\t}\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<AppStateContext.Provider value={context.state}>\n\t\t\t<AppDispatchContext.Provider value={context.dispatch}>\n\t\t\t\t<div className=\"App\" ref={padRef}>\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<Title />\n\t\t\t\t\t\t<Cubemap />\n\t\t\t\t\t\t<Help show={showHelp} />\n\t\t\t\t\t\t<Scene\n\t\t\t\t\t\t\tdisplayEnvironment={true}\n\t\t\t\t\t\t\tdisplayFloor={false}\n\t\t\t\t\t\t\tonSectionChange={(section) => {\n\t\t\t\t\t\t\t\tconsole.log('section changed to ', section);\n\t\t\t\t\t\t\t\t//dispatch({type: 'updateSection', payload: section});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Rubiks />\n\t\t\t\t\t\t</Scene>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\t\t\t</AppDispatchContext.Provider>\n\t\t</AppStateContext.Provider>\n\t)\n}\n\nexport default App;\n","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\State\\context.js",["133"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Rubiks.js",["134","135","136"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\TopBar.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Face.js",[],["137","138"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\reportWebVitals.js",[],["139","140"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\FaceZero.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\FaceOne.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\FaceTwo.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Cube.js",["141"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\ColorMaterial.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\index.js",[],["142","143"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Effects.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Util\\Rotations.js",[],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\App.js",["144"],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\Rubiks.js",[],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\ColorMaterial.js",[],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\Scene.js",["145"],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\State\\context.js",[],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Util\\Rotations.js",["146","147"],"C:\\Users\\16127\\desktop\\React\\rubiks\\src\\Components\\Cube.js",["148"],"/* eslint-disable default-case */\r\nimport React, { useContext } from 'react'\r\nimport './ColorMaterial'\r\nimport { AppStateContext } from '../State/context'\r\nimport { Html } from 'drei';\r\nimport { Math } from 'three'\r\n\r\nfunction Cube(props) {\r\n\r\n\tconst state  = useContext(AppStateContext);\r\n\r\n\tconst colorMap = {\r\n\t\tblack: \"#000000\",\r\n\t\tred: \"red\",\r\n\t\tblue: \"blue\",\r\n\t\torange: \"#ce8500\",\r\n\t\tgreen: \"green\",\r\n\t\tyellow: \"yellow\",\r\n\t\twhite: \"#ffffff\"\r\n\t};\r\n\r\n\tconst getRealCubeName = (n) => {\r\n\t\tlet positionTranslated = state.positionMap[props.type].indexOf(n);\r\n\t\tlet realCubeName = state.positions[positionTranslated];\r\n\t\treturn realCubeName;\r\n\t}\r\n\r\n\tconst getColoredSides = () => {\r\n\r\n\t\tlet cubeID = getRealCubeName(props.colorID)\r\n\t\tlet arr = Array(6).fill(\"black\");\r\n\t\tlet blue = [2,11,20,5,14,23,8,17,26];\r\n\t\tlet green = [0,3,6,9,12,15,18,21,24];\r\n\t\tlet white = [0,1,2,9,10,11,18,19,20]\r\n\t\tlet yellow = [6,7,8,15,16,17,24,25,26];\r\n\t\tlet red = [0,1,2,3,4,5,6,7,8];\r\n\t\tlet orange = [24,25,26,21,22,23,18,19,20];\r\n\r\n\t\tif (blue.includes(cubeID)){\r\n\t\t\tarr[0] = \"blue\"\r\n\t\t}\r\n\t\tif (green.includes(cubeID)){\r\n\t\t\tarr[1] = \"green\"\r\n\t\t}\r\n\t\tif (white.includes(cubeID)){\r\n\t\t\tarr[2] = \"white\"\r\n\t\t}\r\n\t\tif (yellow.includes(cubeID)){\r\n\t\t\tarr[3] = \"yellow\"\r\n\t\t}\r\n\t\tif (red.includes(cubeID)){\r\n\t\t\tarr[4] = \"red\";\r\n\t\t}\r\n\t\tif (orange.includes(cubeID)){\r\n\t\t\tarr[5] = \"orange\"\r\n\t\t}\r\n\t\treturn arr.map(color => <meshBasicMaterial\r\n\t\t\tattachArray=\"material\"\r\n\t\t\tcolor={colorMap[color]}\r\n\t\t\tmetalness={1}\r\n\t\t/>);\r\n\t}\r\n\r\n\tlet cubeName = getRealCubeName(props.colorID);\r\n\tlet rotationsDeg = state.cubeRotations[getRealCubeName(props.colorID)]\r\n\t/*\r\n\tlet rotations = [\r\n\t\tMath.degToRad(rotationsDeg[state.cubeAxelMapping[cubeName][0]]),\r\n\t\tMath.degToRad(rotationsDeg[state.cubeAxelMapping[cubeName][1]]),\r\n\t\tMath.degToRad(rotationsDeg[state.cubeAxelMapping[cubeName][2]])\r\n\t]\r\n\t*/\r\n\tlet rotations = [\r\n\t\tMath.degToRad(rotationsDeg[0]),\r\n\t\tMath.degToRad(rotationsDeg[1]),\r\n\t\tMath.degToRad(rotationsDeg[2])\r\n\t]\r\n\r\n\treturn (\r\n\t<mesh\r\n\t\t{...props}\r\n\t\tcastShadow\r\n\t\trotation={rotations}\r\n\t>\r\n\r\n\t\t{ \r\n\t\t\t(getRealCubeName(props.colorID) === 0) ?\r\n\t\t\t(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Html scaleFactor={5} position={[0,0,0]}>\r\n\t\t\t\t\t\t{ getRealCubeName(props.colorID) }\r\n\t\t\t\t\t</Html>\r\n\t\t\t\t<axesHelper size={20} />\r\n\t\t\t\t</>\r\n\t\t\t):null\r\n\t\t}\r\n\t\t<boxBufferGeometry args={[1, 1, 1]} attach=\"geometry\" />\r\n\t\t{ getColoredSides() }\r\n\t</mesh>\r\n\t)\r\n}\r\n\r\nexport default Cube","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\ControlDisplay.js",["149"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Environment.js",["150"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Title.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Cubemap.js",["151"],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Components\\Help.js",[],"C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Hooks\\useGestures.js",["152","153","154","155","156"],"import { useEffect, useRef } from 'react';\r\nimport useWindowSize from './useWindowSize';\r\n\r\nconst useGestures = (ref) =>  {\r\n\t\r\n\tconst { windowWidth } = useWindowSize();\r\n\tconst position = useRef({x: 'x', y: 'y'});\r\n\tconst points = useRef([]);\r\n\tlet touches = [];\r\n\tlet clear = true;\r\n\tlet running = false;\r\n\r\n\tconst handleGestureStart = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (window.PointerEvent) {\r\n\t\t\te.target.setPointerCapture(e.pointerId);\r\n\t\t}\r\n\t\ttouches.push(e.pointerId);\r\n\t\tif (touches.length <= 1){\r\n\t\t\tclear = true;\r\n\t\t\trunning = false;\r\n\t\t} else {\r\n\t\t\tclear = false;\r\n\t\t}\r\n\t\tposition.current = getGesturePointFromEvent(e);\r\n\t\tpoints.current = [position.current, ...points.current];\r\n\t}\r\n\r\n\tconst handleGestureMove = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (touches.length > 1){\r\n\t\t\tclear = false;\r\n\t\t}\r\n\t\tposition.current = getGesturePointFromEvent(e);\r\n\t\tpoints.current = [position.current, ...points.current];\r\n\t}\r\n\r\n\tconst handleGestureEnd = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (touches.length > 1){\r\n\t\t\tclear = false;\r\n\t\t}\r\n\t\ttouches = touches.filter(touch => touch !== e.pointerId);\r\n\r\n\t\tif (!running){\r\n\t\t\tif (touches && touches.length <= 1 && clear){\r\n\t\t\t\trunning = true;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\trunning = false;\r\n\t\t\t\t}, 3000)\r\n\t\t\t\tprocessGesture(points.current, e);\r\n\t\t\t\tpoints.current = [];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst getGesturePointFromEvent = (e) => {\r\n\t\tvar point = {};\r\n\t\tif(e.targetTouches) {\r\n\t\t\tpoint.x = e.targetTouches[0].offsetX;\r\n\t\t\tpoint.y = e.targetTouches[0].offsetY;\r\n\t\t} else {\r\n\t\t\tpoint.x = e.offsetX;\r\n\t\t\tpoint.y = e.offsetY;\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tconst processGesture = (points) => {\r\n\t\tif (points.length <= 0) return;\r\n\r\n\t\t// get the targets dimensions\r\n\t\tconst element_dimensions = ref.current.getBoundingClientRect();\r\n\r\n\t\t// more work to determine that it's something resembling a circle\r\n\t\tlet half_width = Math.floor(element_dimensions.width / 2);\r\n\t\tlet half_height = Math.floor(element_dimensions.height / 2);\r\n\r\n\t\t// some circle helpers\r\n\t\tconst getQuadrant = (point) => {\r\n\t\t\tif (point.x < half_width && point.y < half_height){\r\n\t\t\t\treturn 0;\r\n\t\t\t} else if (point.x > half_width && point.y < half_height){\r\n\t\t\t\treturn 1;\r\n\t\t\t} else if (point.x > half_width && point.y > half_height){\r\n\t\t\t\treturn 2;\r\n\t\t\t} else {\r\n\t\t\t\treturn 3;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// detect tap\r\n\t\t// first see if the draw path (rough estimate) is longer than the width and height\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t// is pretty short\r\n\t\t\t\tpoints.length < (element_dimensions.width / 5) &&\r\n\t\t\t\tpoints.length < (element_dimensions.height / 5)\r\n\t\t\t) && (\r\n\t\t\t\t// starts and ends in same place\r\n\t\t\t\tgetQuadrant(points[0]) === getQuadrant(points[points.length - 1])\r\n\t\t\t)\r\n\t\t){\r\n\r\n\t\t\t// which quandrant tapped\r\n\t\t\tlet quadrant = getQuadrant(points[0]);\r\n\t\t\tif (quadrant == 0){\r\n\t\t\t\tGestures.dispatch('tap-top-left', {});\r\n\t\t\t} else if (quadrant == 1){\r\n\t\t\t\tGestures.dispatch('tap-top-right', {});\r\n\t\t\t} else if (quadrant == 2){\r\n\t\t\t\tGestures.dispatch('tap-bottom-right', {});\r\n\t\t\t} else {\r\n\t\t\t\tGestures.dispatch('tap-bottom-left', {});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (\r\n\t\t\tpoints.length > (element_dimensions.width) &&\r\n\t\t\tpoints.length > (element_dimensions.height)\r\n\t\t){\r\n\r\n\t\t\t/*\r\n\t\t\t\tpretty sure its a circle by this point\r\n\t\t\t\twe could also check that each part is container within the same quadrant of the parent to\r\n\t\t\t\trule out any zigzag stuff, but this should do fine\r\n\t\t\t*/\r\n\t\t\tlet third_index = Math.floor(points.length / 3);\r\n\t\t\tlet four_points = [\r\n\t\t\t\tpoints[0],\r\n\t\t\t\tpoints[third_index],\r\n\t\t\t\tpoints[third_index * 2],\r\n\t\t\t\tpoints[points.length - 1]\r\n\t\t\t];\r\n\t\t\tconst four_point_quadrants = four_points.map(point => getQuadrant(point));\r\n\r\n\t\t\t// determine if it's clockwise or counter clockwise\r\n\t\t\t// first find which axis has the greatest difference between points 1 and 3\r\n\t\t\tconst vertical_disparity   = Math.abs(four_points[0].y - four_points[2].y);\r\n\t\t\tconst horizontal_disparity = Math.abs(four_points[0].x - four_points[2].x);\r\n\r\n\t\t\t// log some more of what we are using to find the circle direction\r\n\r\n\t\t\tif (horizontal_disparity > vertical_disparity){\r\n\t\t\t\t// x had the greater disparity\r\n\t\t\t\t// if point 2 is lower than point 4, its a counter clockwise circle\r\n\t\t\t\tif (four_points[1].y < four_points[3].y){\r\n\t\t\t\t\tGestures.dispatch('counter-clockwise', {});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tGestures.dispatch('clockwise', {});\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// y had the greater disparity\r\n\t\t\t\t// if point two is to the left of point 4, its a counter clockwise circle\r\n\t\t\t\tif (four_points[1].x < four_points[3].x){\r\n\t\t\t\t\tGestures.dispatch('counter-clockwise', {});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tGestures.dispatch('clockwise', {});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/*\r\n\t\t\tNOT A CIRCLE, LET'S FIGURE OUT THE LINES\r\n\t\t*/\r\n\t\t}\telse {\r\n\r\n\t\t\t// define line helper functions\r\n\t\t\tconst isSwiperRight = (points) => {\r\n\t\t\t\t// is swipe right\r\n\t\t\t\tif (\r\n\t\t\t\t\tpoints[0].x > points[points.length - 1].x && \r\n\t\t\t\t\tMath.abs(points[0].x - points[points.length - 1].x) > 50\r\n\t\t\t\t){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} \r\n\t\t\t\t// is swipe left\r\n\t\t\t\telse if (\r\n\t\t\t\t\tpoints[0].x < points[points.length - 1].x &&\r\n\t\t\t\t\tMath.abs(points[0].x - points[points.length - 1].x) > 50\r\n\t\t\t\t){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst isSwiperUp = (points) => {\r\n\t\t\t\t// is swipe up\r\n\t\t\t\tif (\r\n\t\t\t\t\tpoints[0].y < points[points.length - 1].y &&\r\n\t\t\t\t\tMath.abs(points[0].y - points[points.length - 1].y) > 50\r\n\t\t\t\t){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} \r\n\t\t\t\t// is swipe down\r\n\t\t\t\telse if (\r\n\t\t\t\t\tpoints[0].y > points[points.length - 1].x &&\r\n\t\t\t\t\tMath.abs(points[0].y - points[points.length - 1].y) > 50\r\n\t\t\t\t){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// is closer to a horizontal line than vertical?\r\n\t\t\tif (\r\n\t\t\t\tMath.abs(points[0].x - points[points.length - 1].x) >\r\n\t\t\t\tMath.abs(points[0].y - points[points.length - 1].y)\r\n\t\t\t){\r\n\t\t\t\t// is bottom\r\n\t\t\t\tconst midline_horizontal = element_dimensions.height / 2;\r\n\t\t\t\tif (\r\n\t\t\t\t\t(points[0].y > midline_horizontal) &&\r\n\t\t\t\t\t(points[points.length - 1].y > midline_horizontal)\r\n\t\t\t\t){\r\n\t\t\t\t\tif (isSwiperRight(points)){\r\n\t\t\t\t\t\tGestures.dispatch('bottom-right', {});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tGestures.dispatch('bottom-left', {});\r\n\t\t\t\t\t}\r\n\t\t\t\t// is top\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t(points[0].y < midline_horizontal) &&\r\n\t\t\t\t\t(points[points.length - 1].y < midline_horizontal)\r\n\t\t\t\t){\r\n\t\t\t\t\tif (isSwiperRight(points)){\r\n\t\t\t\t\t\tGestures.dispatch('top-right', {});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tGestures.dispatch('top-left', {});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// is left\r\n\t\t\t\tconst midline_vertical = element_dimensions.width / 2;\r\n\t\t\t\tif (\r\n\t\t\t\t\t(points[0].x < midline_vertical) &&\r\n\t\t\t\t\t(points[points.length - 1].x < midline_vertical)\r\n\t\t\t\t){\r\n\t\t\t\t\tif (isSwiperUp(points)){\r\n\t\t\t\t\t\tGestures.dispatch('left-up', {});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tGestures.dispatch('left-down', {});\r\n\t\t\t\t\t}\r\n\t\t\t\t// is right\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t(points[0].x > midline_vertical) &&\r\n\t\t\t\t\t(points[points.length - 1].x > midline_vertical)\r\n\t\t\t\t){\r\n\t\t\t\t\tif (isSwiperUp(points)){\r\n\t\t\t\t\t\tGestures.dispatch('right-up', {});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tGestures.dispatch('right-down', {});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet element = ref.current;\r\n\t\tif (windowWidth <= 800){\r\n\t\t\telement.addEventListener('pointerdown', handleGestureStart, true);\r\n\t\t\telement.addEventListener('pointermove', handleGestureMove, true);\r\n\t\t\telement.addEventListener('pointerup', handleGestureEnd, true);\r\n\t\t\telement.addEventListener('pointercancel', handleGestureEnd, true);\r\n\t\t\treturn () => {\r\n\t\t\t\telement.removeEventListener('pointerdown', handleGestureStart, true);\r\n\t\t\t\telement.removeEventListener('pointermove', handleGestureMove, true);\r\n\t\t\t\telement.removeEventListener('pointerup', handleGestureEnd, true);\r\n\t\t\t\telement.removeEventListener('pointercancel', handleGestureEnd, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst Gestures = {\r\n\t\t_events: {},\r\n\t\tdispatch(event, data) {\r\n\t\t  if (!this._events[event]) return;\r\n\t\t  this._events[event].forEach(callback => callback(data))\r\n\t\t},\r\n\t\tsubscribe(event, callback) {\r\n\t\t  if (!this._events[event]) this._events[event] = [];\r\n\t\t  this._events[event].push(callback);\r\n\t\t},\r\n\t\tunsubscribe(event) {\r\n\t\t  if (!this._events[event]) return;\r\n\t\t  delete this._events[event];\r\n\t\t}\r\n\t}\r\n\r\n\treturn Gestures\r\n}\r\n\r\nexport default useGestures;","C:\\Users\\16127\\Desktop\\React\\rubiks\\src\\Hooks\\useWindowSize.js",[],{"ruleId":"157","severity":1,"message":"158","line":1,"column":37,"nodeType":"159","messageId":"160","endLine":1,"endColumn":44},{"ruleId":"157","severity":1,"message":"161","line":1,"column":46,"nodeType":"159","messageId":"160","endLine":1,"endColumn":56},{"ruleId":"157","severity":1,"message":"162","line":5,"column":47,"nodeType":"159","messageId":"160","endLine":5,"endColumn":59},{"ruleId":"157","severity":1,"message":"163","line":5,"column":61,"nodeType":"159","messageId":"160","endLine":5,"endColumn":68},{"ruleId":"164","severity":1,"message":"165","line":78,"column":5,"nodeType":"166","endLine":78,"endColumn":18,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":174,"column":5,"nodeType":"166","endLine":174,"endColumn":7,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":85,"column":2,"nodeType":"172","messageId":"173","endLine":275,"endColumn":3},{"ruleId":"157","severity":1,"message":"174","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":21},{"ruleId":"157","severity":1,"message":"175","line":32,"column":11,"nodeType":"159","messageId":"160","endLine":32,"endColumn":18},{"ruleId":"157","severity":1,"message":"176","line":115,"column":9,"nodeType":"159","messageId":"160","endLine":115,"endColumn":15},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"164","severity":1,"message":"183","line":61,"column":5,"nodeType":"166","endLine":61,"endColumn":15,"suggestions":"184"},{"ruleId":"177","replacedBy":"185"},{"ruleId":"179","replacedBy":"186"},{"ruleId":"157","severity":1,"message":"187","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":14},{"ruleId":"157","severity":1,"message":"188","line":10,"column":10,"nodeType":"159","messageId":"160","endLine":10,"endColumn":21},{"ruleId":"157","severity":1,"message":"189","line":300,"column":7,"nodeType":"159","messageId":"160","endLine":300,"endColumn":13},{"ruleId":"157","severity":1,"message":"190","line":323,"column":12,"nodeType":"159","messageId":"160","endLine":323,"endColumn":22},{"ruleId":"157","severity":1,"message":"191","line":64,"column":6,"nodeType":"159","messageId":"160","endLine":64,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":9,"column":2,"nodeType":"194","messageId":"195","endLine":13,"endColumn":5},{"ruleId":"164","severity":1,"message":"196","line":22,"column":5,"nodeType":"166","endLine":22,"endColumn":11,"suggestions":"197"},{"ruleId":"157","severity":1,"message":"198","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":107,"column":17,"nodeType":"201","messageId":"202","endLine":107,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":109,"column":24,"nodeType":"201","messageId":"202","endLine":109,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":111,"column":24,"nodeType":"201","messageId":"202","endLine":111,"endColumn":26},{"ruleId":"157","severity":1,"message":"203","line":134,"column":10,"nodeType":"159","messageId":"160","endLine":134,"endColumn":30},{"ruleId":"164","severity":1,"message":"204","line":268,"column":5,"nodeType":"166","endLine":268,"endColumn":7,"suggestions":"205"},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'DefaultState' is defined but never used.","'reducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'turnKeyOff' and 'turnKeyOn'. Either include them or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect has missing dependencies: 'Gestures', 'state.moving', and 'windowWidth'. Either include them or remove the dependency array.",["207"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useWindowSize' is defined but never used.","'section' is assigned a value but never used.","'cubeID' is assigned a value but never used.","no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],"React Hook useEffect has a missing dependency: 'props.ID'. Either include it or remove the dependency array.",["210"],["208"],["209"],"'TopBar' is defined but never used.","'Environment' is defined but never used.","'invert' is assigned a value but never used.","'adjustAxis' is defined but never used.","'cubeName' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'loader' and 'scene'. Either include them or remove the dependency array.",["211"],"'AppStateContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'four_point_quadrants' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleGestureEnd', 'handleGestureMove', 'handleGestureStart', 'ref', and 'windowWidth'. Either include them or remove the dependency array.",["212"],{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [turnKeyOff, turnKeyOn, windowWidth]",{"range":"223","text":"224"},"Update the dependencies array to be: [Gestures, state.moving, windowWidth]",{"range":"225","text":"226"},"Update the dependencies array to be: [dispatch, props.ID]",{"range":"227","text":"228"},"Update the dependencies array to be: [loader, path, scene]",{"range":"229","text":"230"},"Update the dependencies array to be: [handleGestureEnd, handleGestureMove, handleGestureStart, ref, windowWidth]",{"range":"231","text":"232"},[2194,2207],"[turnKeyOff, turnKeyOn, windowWidth]",[4811,4813],"[Gestures, state.moving, windowWidth]",[1476,1486],"[dispatch, props.ID]",[654,660],"[loader, path, scene]",[7725,7727],"[handleGestureEnd, handleGestureMove, handleGestureStart, ref, windowWidth]"]